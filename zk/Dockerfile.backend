# Use the official Rust image as base
FROM --platform=linux/amd64 debian:bookworm-slim as builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    pkg-config \
    libssl-dev \
    libpq-dev \
    curl \
    git \
    cmake \
    ninja-build \
    && rm -rf /var/lib/apt/lists/*

# Install Rust via rustup
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}" 


# Install RISC0 toolchain (Manual method)
WORKDIR /tmp
RUN git clone https://github.com/risc0/risc0.git
WORKDIR /tmp/risc0
RUN git checkout release-2.1
RUN cargo install --path rzup
RUN rzup install
# RUN cargo install --path risc0/cargo-risczero

# Set working directory
WORKDIR /app

# Copy the entire workspace
COPY . .

# Create a new empty project for cargo vendor
# RUN mkdir -p /tmp/vendor && cd /tmp/vendor && cargo init

# # Vendor dependencies for offline builds
# RUN cd /tmp/vendor && cargo vendor /app/vendor

# # Copy vendor directory to app
# RUN cp -r /tmp/vendor/vendor /app/


# Build the project
RUN RISC0_DEV_MODE=1 RUST_LOG=info RISC0_INFO=1 cargo build --release --package host
RUN cargo build --release --bin db

# Runtime stage
FROM --platform=linux/amd64 debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libpq5 \
    libssl3 \
    postgresql-client \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd -m -u 1000 rustuser

# Set working directory
WORKDIR /app

# Copy the binaries from builder stage
COPY --from=builder /app/target/release/host /app/host
COPY --from=builder /app/target/release/db /app/db

# Copy any necessary files (like methods ELF files)
COPY --from=builder /app/methods /app/methods
COPY --from=builder /app/db /app/db_files

# Add entrypoint script
COPY entrypoint.sh /app/entrypoint.sh
RUN chmod +x /app/entrypoint.sh

# Change ownership to non-root user
RUN chown -R rustuser:rustuser /app

# Switch to non-root user
USER rustuser

# Expose port
EXPOSE 3001

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:3001/api/cars || exit 1

# Run the entrypoint script
CMD ["/app/entrypoint.sh"]