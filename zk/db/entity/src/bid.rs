//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;
use serde::{ Deserialize, Serialize };

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Deserialize, Serialize)]
#[sea_orm(table_name = "bid")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub auction_id: i32,
    pub bidder_id: String,
    pub amount: i32,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::auction::Entity",
        from = "Column::AuctionId",
        to = "super::auction::Column::Id",
        on_update = "NoAction",
        on_delete = "SetNull"
    )]
    Auction,
}

impl Related<super::auction::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Auction.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
